var documenterSearchIndex = {"docs":
[{"location":"transfer/#Transfer-Function","page":"Transfer Function","title":"Transfer Function","text":"","category":"section"},{"location":"transfer/#Description","page":"Transfer Function","title":"Description","text":"","category":"section"},{"location":"transfer/","page":"Transfer Function","title":"Transfer Function","text":"In CosmoTools you can define a transfer function to be applied to the primordial curvature power spectrum in order to obtain the matter power spectrum in the matter dominater era. Some usual transfer functions are already included. ","category":"page"},{"location":"transfer/#Structures","page":"Transfer Function","title":"Structures","text":"","category":"section"},{"location":"transfer/#Constants","page":"Transfer Function","title":"Constants","text":"","category":"section"},{"location":"transfer/#Functions","page":"Transfer Function","title":"Functions","text":"","category":"section"},{"location":"transfer/#CosmoTools.transfer_function-Tuple{Real, FLRW}","page":"Transfer Function","title":"CosmoTools.transfer_function","text":"transfer_function(k, [bkg_cosmo::BkgCosmology], with_baryons = true)\n\nIf bkg_cosmo is given computes the transfer function for\n\n\n\n\n\n","category":"method"},{"location":"manual/#Manual","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"manual/#Installation","page":"Manual","title":"Installation","text":"","category":"section"},{"location":"manual/#Recommended-installation","page":"Manual","title":"Recommended installation","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The recommended way to install CosmoTools is to use the local registry CosmoRegistry following the few steps below in a julia shell","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using Pkg\n\n# add the registry to the your own\nPkg.Registry.add(url = \"https://github.com/gaetanfacchinetti/CosmoRegistry.git\")\n\n# fetch CosmoTools in the local registry\nPkg.add(\"CosmoTools\")\n\n# import CosmoTools\nusing CosmoTools","category":"page"},{"location":"manual/#For-developpers","page":"Manual","title":"For developpers","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"To develop CosmoTools, you can clone this github repository","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"git clone https://github.com/gaetanfacchinetti/CosmoTools.git","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"and install it in a julia shell","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using Pkg\nPkg.develop(path = \"<path>/CosmoTools.jl\")\n\nusing CosmoTools","category":"page"},{"location":"manual/#Examples","page":"Manual","title":"Examples","text":"","category":"section"},{"location":"manual/","page":"Manual","title":"Manual","text":"The fundamental brick of the CosmoTools is the BkgCosmology. You can for instance define a FLRW child as shown below.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"using CosmoTools\n\n# Constructor of FLRW cosmology is\n# FLRW(h::Real, Ω_χ0::Real, Ω_b0::Real, Ω_k0::Real=0; T0_CMB_K::Real = 2.72548, Neff::Real = 3.04, EdS::Bool = false)\ncosmo_bkg::FLRW = FLRW(0.6736, 3.0, 0.0)\n\n# predefined cosmology exists such as\nconst planck18_bkg::FLRW = FLRW(0.6736, 0.26447, 0.04930)\nconst edsPlanck18_bkg::FLRW  = FLRW(0.6736, 0.3, 0, EdS = true)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"A multitude of functions are then available to compute quantities related to this background cosmology.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"# critical density of the Universe\nρ_critical(0.0, cosmo_bkg) \n\n# age of the universe\nuniverse_age(0.0, cosmo_bkg)","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"In addition, CosmoTools can be used to evaluate the matter power spectrum with a predefined transfer function and even evaluate the halo mass function from the Press-Schechter formalism.","category":"page"},{"location":"manual/","page":"Manual","title":"Manual","text":"# define a cosmology from a background cosmology, a primodial curvature power spectrum and a transfer function\n# a predifined cosmology is, for instance, that from Planck18 \nconst planck18::Cosmology = Cosmology(\"PLANCK18\", planck18_bkg, k->power_spectrum_ΛCDM(k, 1e-10*exp(3.044), 0.9649), EH98_planck18)\n\n# the Press-Schechter halo mass function for a top-hat window function in planck18 cosmology at z = 0 is obtained from \nm = 10.0.^range(-5, 16, 200)\ndndm = dn_dM.(m, 0, TopHatWindow, PressSchechter; cosmology = planck18, growth_function=growth_factor_Carroll, δ_c = 1.686)","category":"page"},{"location":"background/#Background","page":"Background","title":"Background","text":"","category":"section"},{"location":"background/#Description","page":"Background","title":"Description","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"CosmoTools provides a set of functions for the background cosmology.","category":"page"},{"location":"background/#Structures","page":"Background","title":"Structures","text":"","category":"section"},{"location":"background/#CosmoTools.Baryons","page":"Background","title":"CosmoTools.Baryons","text":"Baryons <: Matter\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.BkgCosmology","page":"Background","title":"CosmoTools.BkgCosmology","text":"BkgCosmology{T<:Real}\n\nAbstract type: generic background cosmology \n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.ColdDarkMatter","page":"Background","title":"CosmoTools.ColdDarkMatter","text":"ColdDarkMatter <: Matter\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Curvature","page":"Background","title":"CosmoTools.Curvature","text":"Curvature <: Species\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.DarkEnergy","page":"Background","title":"CosmoTools.DarkEnergy","text":"DarkEnergy <: Species\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.FLRW","page":"Background","title":"CosmoTools.FLRW","text":"FLRW(h, Ω_χ0, Ω_b0; T0_CMB_K = 2.72548, Neff = 3.04)\n\nCreates a FLRW instance\n\nArguments\n\nh::Real : hubble parameter (dimensionless)\nΩ_χ0::Real: cold dark matter abundance today (dimensionless)\nΩ_b0::Real: baryon abundance today (dimensionless)\nT0_CMB_K::Real: temperature of the CMB today (in Kelvin)\nNeff::Real: effective number of neutrinos (dimensionless)\n\nReturns\n\nA FLRW structure\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.FLRW-2","page":"Background","title":"CosmoTools.FLRW","text":"FLRW{T<:Real} <: BkgCosmology{T}\n\nDefines a flat FLRW background cosmology\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Matter","page":"Background","title":"CosmoTools.Matter","text":"Matter <: Species\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Neutrinos","page":"Background","title":"CosmoTools.Neutrinos","text":"Neutrinos <: Radiation\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Photons","page":"Background","title":"CosmoTools.Photons","text":"Photons <: Radiation\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Radiation","page":"Background","title":"CosmoTools.Radiation","text":"Radiation <: Species\n\n\n\n\n\n","category":"type"},{"location":"background/#CosmoTools.Species","page":"Background","title":"CosmoTools.Species","text":"Species\n\nAbstract type: generic species populating the Universe\n\n\n\n\n\n","category":"type"},{"location":"background/#Constants","page":"Background","title":"Constants","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"The module provides some predefined background cosmologies","category":"page"},{"location":"background/#CosmoTools.edsPlanck18_bkg","page":"Background","title":"CosmoTools.edsPlanck18_bkg","text":"edsplanck18_bkg::FLRW  = FLRW(0.6736, 0.3, 0)\n\nFlat FLRW cosmology with Planck18 parameters and no baryons\n\n\n\n\n\n","category":"constant"},{"location":"background/#CosmoTools.planck18_bkg","page":"Background","title":"CosmoTools.planck18_bkg","text":"planck18_bkg::FLRW = FLRW(0.6736, 0.26447, 0.04930)\n\nFlat FLRW cosmology with Planck18 parameters\n\n\n\n\n\n","category":"constant"},{"location":"background/#Functions","page":"Background","title":"Functions","text":"","category":"section"},{"location":"background/#CosmoTools.a_to_z-Tuple{Real}","page":"Background","title":"CosmoTools.a_to_z","text":"a_to_z(z)\n\nConvert scale parameter to redshift. Simple implementation of\n\nz = frac1a-1\n\nArguments\n\na::Real : scale factor (dimensionless)\n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.convert_cosmo-Union{Tuple{Type{T}}, Tuple{T}, Tuple{Type{T}, FLRW}} where T<:Real","page":"Background","title":"CosmoTools.convert_cosmo","text":"Convert bkg_cosmo object attributes to another type \n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.growth_factor","page":"Background","title":"CosmoTools.growth_factor","text":"growth_factor(z, bkg_cosmo)\n\nExact growth factor in a matter-Λ Universe computed from an integral\nCarroll et al. 1992 (Mo and White p. 172)\nCorresponds to D1(a=1) with the definition of Dodelson 2003\n\nArguments\n\nz::Real : redshift (dimensionless)\nbkg_cosmo::BkgCosmology : background cosmology, default planck18_bkg\n\nKwargs\n\nAny argument that can be passed to `QuadGK.quadgk'\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.growth_factor_Carroll","page":"Background","title":"CosmoTools.growth_factor_Carroll","text":"growth_factor_Carroll(z, bkg_cosmo)\n\nApproximate growth factor in a matter-Λ Universe (faster than growth_factor)\nCarroll et al. 1992 (Mo and White p. 172)\nCorresponds to D1(a=1) with the definition of Dodelson 2003\n\nArguments\n\nz::Real : redshift (dimensionless)\nbkg_cosmo::BkgCosmology : background cosmology, default planck18_bkg\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.hubble_E","page":"Background","title":"CosmoTools.hubble_E","text":"hubble_E(z, bkg_cosmo)\n\nHubble evolution function E(z) (dimensionless) at redshift z.\n\nArguments\n\nz::Real: Redshift (default: 0.0)\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.hubble_E2","page":"Background","title":"CosmoTools.hubble_E2","text":"hubble_E2(z, bkg_cosmo)\n\nSquared Hubble evolution function E²(z) (dimensionless) at redshift z.\n\nArguments\n\nz::Real: Redshift (default: 0.0)\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.hubble_H","page":"Background","title":"CosmoTools.hubble_H","text":"hubble_H(z, bkg_cosmo)\n\nHubble rate H(z) (in km/s/Mpc) of the Universe at redshift z.\n\nArguments\n\nz::Real: Redshift (default: 0.0)\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.hubble_H0","page":"Background","title":"CosmoTools.hubble_H0","text":"hubble_H0(bkg_cosmo)\n\nHubble constant H₀ (in km/s/Mpc) for the cosmology.\n\nArguments\n\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.hubble_H0_s","page":"Background","title":"CosmoTools.hubble_H0_s","text":"hubble_H0_s(bkg_cosmo)\n\nHubble constant H₀ (in 1/s) for the cosmology.\n\nArguments\n\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.k_eq_mr-Tuple{BkgCosmology}","page":"Background","title":"CosmoTools.k_eq_mr","text":"k_eq_mr(bkg_cosmo)\n\nWave number at matter–radiation equality.\n\nArguments\n\nbkg_cosmo::BkgCosmology: Cosmological background model\n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.lookback_redshift","page":"Background","title":"CosmoTools.lookback_redshift","text":"lookback_lookback_redshift(t, bkg_cosmo; kws...)\n\nlookback redshift of the Universe for t in (s)\n\nArguments\n\nt::Real : time (s)\nbkg_cosmo::BkgCosmology : background cosmology (dimensionless), default planck18_bkg\n\nKwargs\n\nAny argument that can be passed to `QuadGK.quadgk'\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.lookback_time","page":"Background","title":"CosmoTools.lookback_time","text":"lookback_time(z, bkg_cosmo; kws...)\n\nlookback time of the Universe (s)\n\nArguments\n\nz::Real : redshift (dimensionless)\nbkg_cosmo::BkgCosmology : background cosmology (dimensionless), default planck18_bkg\n\nKwargs\n\nAny argument that can be passed to `QuadGK.quadgk'\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.mean_ρ-Union{Tuple{Type{T}}, Tuple{T}, Tuple{Type{T}, Real}, Tuple{Type{T}, Real, BkgCosmology}} where T<:Species","page":"Background","title":"CosmoTools.mean_ρ","text":"mean_ρ(T, z = 0, bkg_cosmo = planck18_bkg) where {T<:Species}\n\nEnergy density of species T at redshift z and for the background cosmology bkg_cosmo\n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.temperature_CMB_K","page":"Background","title":"CosmoTools.temperature_CMB_K","text":"temperature_CMB_K(z, bkg_cosmo)\n\nCMB temperature (in K) of the Universe at redshift z.\n\nArguments\n\nz::Real: Redshift (default: 0.0)\nbkg_cosmo::BkgCosmology: Cosmological background model (default: planck18_bkg)\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.universe_age","page":"Background","title":"CosmoTools.universe_age","text":"universe_age(z, bkg_cosmo; kws...)\n\nage of the universe (s)\n\nArguments\n\nz::Float64 : redshift (dimensionless), default 0.0\nbkg_cosmo::BkgCosmology : background cosmology (dimensionless), default planck18_bkg\n\nKwargs\n\nAny argument that can be passed to `QuadGK.quadgk'\n\n\n\n\n\n","category":"function"},{"location":"background/#CosmoTools.z_to_a-Tuple{Real}","page":"Background","title":"CosmoTools.z_to_a","text":"z_to_a(z)\n\nConvert redshift z to scale parameter a. Simple implementation of\n\na = frac11+z\n\nArguments\n\nz::Real : redshift (dimensionless)\n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.Ω-Union{Tuple{Type{T}}, Tuple{T}, Tuple{Type{T}, Real}, Tuple{Type{T}, Real, BkgCosmology}} where T<:Species","page":"Background","title":"CosmoTools.Ω","text":"Ω(T, z = 0, bkg_cosmo = planck18_bkg) where {T<:Species}\n\nAbundance of species T at redshift z and for the background cosmology bkg_cosmo\n\n\n\n\n\n","category":"method"},{"location":"background/#CosmoTools.ρ_critical","page":"Background","title":"CosmoTools.ρ_critical","text":"Critical density (in Msun/Mpc^3) of the Universe at redshift z (by default z=0) for the cosmology bkg_cosmo \n\n\n\n\n\n","category":"function"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome in this documentation of CosmoTools.jl.  This is a lightweight Julia module to compute basic cosmological quantities.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\", \"manual.md\", \"background.md\", \"transfer.md\"]\nDepth = 1","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
